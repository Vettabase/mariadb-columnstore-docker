#!/usr/bin/env bash

CMAPI_KEY="${CMAPI_KEY:-somekey123}"
MAXSCALE="${MAXSCALE:-false}"
IFLAG='/etc/columnstore/container-initialized'

HOSTS=( "$@" )
if [[ "$#" -eq 0 ]]; then
    HOSTS=(mcs1 mcs2 mcs3)
fi

EXPANDED=()
for e in "${HOSTS[@]}"; do
    EXPANDED+=("--node ${e}")
done

RED='\033[0;31m'
GREEN='\033[0;32m'
NC='\033[0m'

# Wait For Primary Node To Start
if [ ! -f $IFLAG ]; then
    echo -n 'Waiting for PM1 to be initialized '
    while [ ! -f $IFLAG ]
    do
        printf "."
        sleep 2
    done
    printf " ${GREEN}done${NC}\n"
fi

sleep 3

# Set API Key
mcs cluster set api-key --key $CMAPI_KEY > /dev/null 2>&1
if [ $? -ne 0 ]; then
    echo "Failed Setting API Key"
    exit 1
fi

# Add Nodes To System

mcs cluster node add "${EXPANDED[@]}" > /dev/null 2>&1
if [[ $? -eq 0 ]]; then
    printf "Adding PMs to Cluster ... ${GREEN}done${NC}\n"
else
    printf "Adding PMs to Cluster ... ${RED}fail${NC}\n"
    exit 1
fi

if [[ ${MAXSCALE} == true ]]; then
    /usr/bin/provision-mxs
fi

sleep 30

# Validate
QUERY=$(mariadb -sN -e "DROP DATABASE IF EXISTS validate; CREATE DATABASE validate; CREATE TABLE validate.sample (id INT) ENGINE=columnstore; INSERT INTO validate.sample VALUES (99); SELECT id FROM validate.sample;" 2>&1)
if [ $? = 0 ] && [ $QUERY = 99 ]; then
    printf "Validating ColumnStore engine ... ${GREEN}done${NC}\n"
    mariadb -e "DROP DATABASE IF EXISTS validate;" 2>&1
else
    printf "Validating ColumnStore engine ... ${RED}fail${NC}\n"
    exit 1
fi