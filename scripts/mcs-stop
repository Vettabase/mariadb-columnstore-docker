#!/bin/bash

# Set Variables
PROGS='DMLProc DDLProc WriteEngineServer PrimProc workernode controllernode StorageManager'
MCS_INSTALL_BIN=/usr/bin
LOG_PREFIX=/var/log/mariadb/columnstore
LOG_FILE=/var/log/mariadb/columnstore/container-sh.log
CMAPI_PID=$(pgrep -f cmapi_server)
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m'

echo -e "${YELLOW}***** Shutting Down ColumnStore System *****${NC}"

# Stop Columnstore
echo $(date): Stopping... >> $LOG_FILE

if  [[ ! -z "$(pidof $PROGS)" ]]; then
    # Save BRM only on the primary node now.
    if  [[ ! -z "$(pidof controllernode)" ]]; then
        $MCS_INSTALL_BIN/mcs-savebrm.py &>> $LOG_PREFIX/savebrm.log 2>&1
    fi
    
    echo $(date): Sending SIGTERM >> $LOG_FILE
    kill $(pidof $PROGS) > /dev/null
    sleep 3
    # Make sure StorageManager had a chance to shutdown clean
    counter=1
    while [ -n "$(pidof StorageManager)" -a $counter -le 60 ]
    do
        sleep 1
        ((counter++))
    done
    echo $(date): Sending SIGKILL >> $LOG_FILE
    kill -9 $(pidof $PROGS) > /dev/null
fi

echo $(date): Clearing SHM >> $LOG_FILE
$MCS_INSTALL_BIN/clearShm

# Stop CMAPI
if [[ -n ${CMAPI_PID} ]]; then
    if kill "${CMAPI_PID}" > /dev/null; then
        echo -e "Stopping Cluster Manager API... ${GREEN}done${NC}"
    else
        echo -e "Stopping Cluster Manager API... ${RED}fail${NC}"
        exit 1
    fi
fi

# Stop MariaDB
if mariadb-admin ping > /dev/null 2>&1; then
    if mariadb-admin shutdown > /dev/null 2>&1; then
        echo -e "Stopping MariaDB Server... ${GREEN}done${NC}"
    else
        echo -e "Stopping MariaDB Server... ${RED}fail${NC}"
        exit 1
    fi
fi